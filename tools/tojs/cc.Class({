cc.Class({
    extends: cc.Component,

    start () {
        cc.loader.loadRes('loadSpine/alien-ess', sp.SkeletonData, this.onProcess.bind(this), this.onComplete.bind(this));
    },

    onProcess (completeCount, totalCount, item) {},

    onComplete (err, res) {
        if (err) {
            this.label.textKey = i18n.t('sprite_loadRes_asset_failed');
            cc.error(err);
        }

        let spine = this.getComponent('sp.Skeleton');
        spine.skeletonData = res;
        let animate = spine.setAnimation(0, 'run', true);  
    }

});

cc.Class({
    extends: cc.Component,

    // or use other way to get the spine object you want.
    properties: {
    	anotherSpine: {
    		default:undefined,
    		type:sp.Skeleton
    	}
    }

    start () {
        let spineNode = new cc.Node();
        let skeletonComp = spineNode.addComponent(sp.Skeleton);
        let reuseSkeletonData = anotherSpine.getSkeletonData();
        skeletonComp._skeleton = new spine.
        spineNode.parent = this.node;
    }

});

var sgNode = new sp._SGSkeletonAnimation();
sgNode.initWithData()


